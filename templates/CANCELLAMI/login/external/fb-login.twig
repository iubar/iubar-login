<script>

function fb_login(){
	FB.getLoginStatus(function(response) {
		var status = response['status'];
		console.log('fb_login() status is: ' + status); 	
			
		if (status === 'connected') {
		   	// Logged into your app and Facebook.
		   	console.log('Logged in.');

			var url = "login/fb/jscallback";
			 var redirect = getParameterByName('redirect');

			 if (redirect != null){
				url = url + "?redirect=" + redirect;
			}
		   				 
			 window.location.replace(url);
	   	} else {
		   	// The person is logged into Facebook, but not your fb-app.
		   	// OR
		   	// The person is not logged into Facebook, so we're not sure if
	      	// they are logged into this app or not.
			fb_login2();
		}
   	});
}

function fb_login2(){
    FB.login(function(response) { // Handle the response object, like in statusChangeCallback()

        if (response.status === 'connected') {
         // oppure  if (response.authResponse) {
        		    // Logged into your app and Facebook.
                    console.log('Welcome! Your are connected. Now I am fetching some information about you.... ');
                    access_token = response.authResponse.accessToken; // get access token
                    console.log('accessToken: ' + access_token);
                    user_id = response.authResponse.userID; // get FB UID
              
        			var url = "login/fb/jscallback";
       			 	var redirect = getParameterByName('redirect');

       			 	if (redirect != null){
       					url = url + "?redirect=" + redirect;
       				}
       		   				 
       			 	window.location.replace(url);

        		 	// Get friends    		 	
        		 	// In v2.0 of the Graph API, calling /me/friends returns the person's friends who also use the app    		 	 
                    // FB.api('/me/friends', function(response) { // invitable_friends only for games
                    //    console.log('friends: ' + JSON.stringify(response));
                    //    var friend_data = response.data.sort(sortMethod);
    				//
                    //    var results = '';
                    //    for (var i = 0; i < friend_data.length; i++) {
                    //        results += '<div><img src="https://graph.facebook.com/' + friend_data[i].id + '/picture">' + friend_data[i].name + '</div>';
                    //    }
    				//
                    //    // and display them at our holder element
                    //    console.log('Result list of your friends: ' + results);
                    // });

                    // Il seguente codice è errato perchè il percorso '/me/user_likes' non esiste
                    // FB.api('/me/user_likes', function(response) { // invitable_friends only for games
                    //   console.log('user_likes: ' + JSON.stringify(response));                   
                    //});      
                        		 	
        	 } else if (response.status === 'not_authorized') {
        		    // The person is logged into Facebook, but not your app.
        		 	console.log('User not fully authorize.');
        	 } else {
        		    // The person is not logged into Facebook, so we're not sure if
        		    // they are logged into this app or not.
        		 	console.log('User not logged in.');
        	 }
    		          
        }, {
//         	Here are a few examples of actions that will require user approval:
//         		You won't be able to access a user's email address unless you ask for the email permission.
//         		You won't be able to post something on a user's timeline unless your ask for the publish_actions permission.
//         		You won't be able to upload a photo album for a user unless your ask for both the user_photos permission and publish_actions permission.    		       
            scope: 'public_profile, email', // ,user_likes, user_friends'
            auth_type: 'https'
        }); // end Fb.login()
}

function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
}
 
</script>